{"version":3,"sources":["webpack:///./src/components/sections/home/header/Effect.ts"],"names":["PI2","Math","PI","init","header","$","canvas","document","getElementById","app","PIXI","width","height","view","antialias","backgroundColor","stage","x","screen","y","size","min","floor","pool","Pool","ticker","add","delta","update","window","onresize","Particle","hw","hh","round","random","rotation","offsetX","offsetY","offsetR","this","Plus","half","lineStyle","max","moveTo","lineTo","endFill","Triangle","THIRD","beginFill","cos","sin","Rectangle","drawRect","particles","i","plus","addChild","triangle","rectangle","push","length"],"mappings":"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","file":"10-4350ea5853a331a6c9cb.js","sourcesContent":["import $ from 'jquery';\nimport * as PIXI from 'pixi.js';\n\nconst PI2 = Math.PI * 2;\n\nexport function init(): void {\n  const header = $('#Header');\n  const canvas = document.getElementById('canvas') as HTMLCanvasElement;\n\n  const app = new PIXI.Application({\n    width: header.width(),\n    height: header.height(),\n    view: canvas,\n    antialias: true,\n    backgroundColor: 0xffffff\n  });\n\n  app.stage.x = app.screen.width * 0.5;\n  app.stage.y = app.screen.height * 0.5;\n\n  const size = Math.min(\n    60,\n    Math.floor((header.width() * header.height()) / 45000)\n  );\n  const pool = new Pool(header, app.stage, size);\n\n  app.ticker.add((delta: number) => {\n    app.stage.x = app.screen.width * 0.5;\n    app.stage.y = app.screen.height * 0.5;\n    pool.update(delta);\n  });\n\n  window.onresize = () => {\n    canvas.width = header.width();\n    canvas.height = header.height();\n    app.screen.width = canvas.width;\n    app.screen.height = canvas.height;\n  };\n}\n\nexport class Particle extends PIXI.Graphics {\n  protected hw: number;\n  protected hh: number;\n  protected size: number;\n  protected offsetX: number;\n  protected offsetY: number;\n  protected offsetR: number;\n\n  constructor(hw: number, hh: number) {\n    super();\n\n    this.hw = hw;\n    this.hh = hh;\n\n    this.size = Math.round(15 + Math.random() * 30);\n\n    this.x = (Math.random() - 0.5) * this.hw;\n    this.y = (Math.random() - 0.5) * this.hh;\n    this.rotation = Math.random() * PI2;\n\n    this.offsetX = (Math.random() - 0.5) * 2 < 0 ? -1 : 1;\n    this.offsetX *= 0.125 + Math.random() * 0.2;\n\n    this.offsetY = (Math.random() - 0.5) * 2 < 0 ? -1 : 1;\n    this.offsetY *= 0.125 + Math.random() * 0.2;\n\n    this.offsetR = (Math.random() - 0.5) * 2 * (0.02 + Math.random() * 0.01);\n  }\n\n  public update(delta: number): void {\n    this.x += this.offsetX * delta;\n    this.y += this.offsetY * delta;\n    this.rotation += this.offsetR * delta;\n\n    const gap = 50;\n    const hw = this.hw * 0.5;\n\n    if (hw + gap < this.x || this.x < -hw - gap) {\n      this.offsetX = -this.offsetX;\n    }\n\n    const hh = this.hh * 0.5;\n\n    if (hh + gap < this.y || this.y < -hh - gap) {\n      this.offsetY = -this.offsetY;\n    }\n  }\n}\n\nexport class Plus extends Particle {\n  constructor(hw: number, hh: number) {\n    super(hw, hh);\n\n    const half = this.size * 0.5;\n    this.lineStyle(Math.max(6, half * 0.2), 0x38066e, 1);\n    this.moveTo(0, -half);\n    this.lineTo(0, half);\n    this.moveTo(-half, 0);\n    this.lineTo(half, 0);\n    this.endFill();\n  }\n}\n\nexport class Triangle extends Particle {\n  constructor(hw: number, hh: number) {\n    super(hw, hh);\n\n    const half = this.size * 0.5;\n    const THIRD = PI2 / 3;\n\n    this.beginFill(0xe5f500);\n    this.moveTo(Math.cos(THIRD * 0) * half, Math.sin(THIRD * 0) * half);\n    this.lineTo(Math.cos(THIRD * 1) * half, Math.sin(THIRD * 1) * half);\n    this.lineTo(Math.cos(THIRD * 2) * half, Math.sin(THIRD * 2) * half);\n    this.lineTo(Math.cos(THIRD * 0) * half, Math.sin(THIRD * 0) * half);\n    this.endFill();\n  }\n}\n\nexport class Rectangle extends Particle {\n  constructor(hw: number, hh: number) {\n    super(hw, hh);\n\n    const half = this.size * 0.5;\n    this.lineStyle(Math.max(6, half * 0.2), 0xf42f70, 1);\n    this.drawRect(-half, -half, this.size, this.size);\n    this.endFill();\n  }\n}\n\nexport class Pool {\n  private particles: Array<Particle>;\n\n  constructor(\n    header: JQuery<HTMLElement>,\n    stage: PIXI.Container,\n    size: number\n  ) {\n    const hw = header.width();\n    const hh = header.height();\n\n    this.particles = [];\n\n    for (let i = 0; i < size; i += 3) {\n      const plus = new Plus(hw, hh);\n      stage.addChild(plus);\n\n      const triangle = new Triangle(hw, hh);\n      stage.addChild(triangle);\n\n      const rectangle = new Rectangle(hw, hh);\n      stage.addChild(rectangle);\n\n      this.particles.push(plus, triangle, rectangle);\n    }\n  }\n\n  public update(delta: number): void {\n    const length = this.particles.length;\n\n    for (let i = 0; i < length; i++) {\n      this.particles[i].update(delta);\n    }\n  }\n}\n"],"sourceRoot":""}